services:
    app1:
        build: .
        container_name: app1
        ports:
            - '3000'
        env_file:
            - .env
        depends_on:
            - postgres
            - redis
        networks:
            - upload_dev

    app2:
        build: .
        container_name: app2
        ports:
            - '3000'
        env_file:
            - .env
        depends_on:
            - postgres
            - redis
        networks:
            - upload_dev

    app3:
        build: .
        container_name: app3
        ports:
            - '3000'
        env_file:
            - .env
        depends_on:
            - postgres
            - redis
        networks:
            - upload_dev

    postgres:
        image: postgres:15
        container_name: postgres
        restart: always
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: upload_dev
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
        ports:
            - '5432:5432'
        networks:
            - upload_dev

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - '6379:6379'
        restart: always
        networks:
            - upload_dev

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: always
        ports:
            - '80:80'
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - './docker/nginx/logs:/var/log/nginx'
        depends_on:
            - app1
            - app2
            - app3
        networks:
            - upload_dev

networks:
    upload_dev:
        driver: bridge
